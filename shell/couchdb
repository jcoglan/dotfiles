#!/bin/bash

CDB_AUTH='admin:admin'
CDB_HOST='127.0.0.1'
CDB_PORT=5984
CDB_URL=''
CDB_COOKIE=''
CDB_HEADERS=()

# ------------------------------------------------------------------------
# Main interface
# ------------------------------------------------------------------------

cdb () {
  local auth=()
  local headers=(-H 'Content-Type: application/json')
  local header

  if [[ -n "$CDB_COOKIE" ]] ; then
    auth=(-b "$CDB_COOKIE")
  else
    auth=(-u "$CDB_AUTH")
  fi

  for header in "${CDB_HEADERS[@]}" ; do
    headers+=(-H "$header")
  done

  curl -gs "${auth[@]}" "${headers[@]}" "$(cdb-host-no-auth)$1" "${@:2}"
}

cdb-host-no-auth () {
  if [[ -n "$CDB_URL" ]] ; then
    echo "$CDB_URL"
  else
    echo "http://${CDB_HOST}:${CDB_PORT}"
  fi
}

cdb-host () {
  if [[ -n "$CDB_URL" ]] ; then
    echo "$CDB_URL"
  else
    echo "http://${CDB_AUTH}@${CDB_HOST}:${CDB_PORT}"
  fi
}

# ------------------------------------------------------------------------
# Edit and delete documents
# ------------------------------------------------------------------------

cdb-edit () {
  local doc="$1"
  local expr="$2"
  local file="/tmp/couch-doc-$RANDOM.json"
  local editor="${EDITOR:-vim}"

  if [[ -z "$expr" ]] ; then
    cdb "$doc" | jq > "$file"

    if "$editor" "$file" ; then
      cdb "$doc" -iX PUT -d @"$file"
    fi
  else
    cdb "$doc" | jq "$expr" > "$file"
    cdb "$doc" -iX PUT -d @"$file"
  fi

  rm "$file"
}

cdb-delete () {
  local doc="$1"
  local rev

  rev="$(cdb "$doc" | jq -r '._rev')"
  cdb "$doc" -X DELETE -H "If-Match: $rev"
}

# ------------------------------------------------------------------------
# Sessions, cookie-based auth
# ------------------------------------------------------------------------

cdb-login () {
  local username="${CDB_AUTH%:*}"
  local password="${CDB_AUTH#*:}"
  local header=''

  cdb-logout

  header="$(cdb '/_session' -iX POST -d @- | egrep -i '^set-cookie:')" <<JSON
    {
      "username": "$username",
      "password": "$password"
    }
JSON

  header="${header#*: }"
  header="${header%%;*}"

  CDB_COOKIE="$header"
}

cdb-logout () {
  CDB_COOKIE=''
}

# ------------------------------------------------------------------------
# Configuration
# ------------------------------------------------------------------------

cdb-nodes () {
  cdb '/_membership' | jq -r '.all_nodes[]'
}

cdb-config-get () {
  local key="$1"
  local node

  cdb-nodes | while read -r node ; do
    echo "[$node]"
    cdb "/_node/$node/_config/$key"
  done
}

cdb-config-set () {
  local key="$1"
  local value="$2"
  local node

  cdb-nodes | while read -r node ; do
    echo "[$node] $key = $value"
    cdb "/_node/$node/_config/$key" -X PUT -d "$value"
  done
}

cdb-config-unset () {
  local key="$1"
  local node

  cdb-nodes | while read -r node ; do
    echo "[$node] $key"
    cdb "/_node/$node/_config/$key" -X DELETE
  done
}

cdb-enable-cors () {
  cdb-config-set 'httpd/enable_cors' '"true"'
  cdb-config-set 'cors/origins' '"*"'
  cdb-config-set 'cors/credentials' '"true"'
  cdb-config-set 'cors/methods' '"GET, PUT, POST, HEAD, DELETE"'
  cdb-config-set 'cors/headers' '"accept, authorization, content-type, origin, referer, x-csrf-token"'
}

# ------------------------------------------------------------------------
# URI encoding
# ------------------------------------------------------------------------

uri-enc () {
  xargs node -e 'for (const arg of process.argv.slice(1)) console.log(encodeURIComponent(arg))'
}

uri-dec () {
  xargs node -e 'for (const arg of process.argv.slice(1)) console.log(decodeURIComponent(arg))'
}
