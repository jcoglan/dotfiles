#!/bin/bash

set -euo pipefail

SUMCMD=shasum
INDEX_FILE=.shasum.txt
IGNORE_FILE=~/.ckignore

ignored_files=("$INDEX_FILE")
request_cmd=''
default_cmd=verify

main () {
  configure "$@"
  cmd-"${request_cmd:-$default_cmd}"
}

die () {
  echo "$@" >&2
  exit 1
}

configure () {
  local file

  case "$(uname -s)" in
    Linux)
      if hash shasum 2> /dev/null ; then
        SUMCMD=shasum
      elif hash sha1sum 2> /dev/null ; then
        SUMCMD=sha1sum
      fi
      ;;
    Darwin)
      SUMCMD=shasum
      ;;
  esac

  if [[ -f "$IGNORE_FILE" ]] ; then
    while read -r file ; do
      ignored_files+=("$file")
    done < "$IGNORE_FILE"
  fi

  while [[ $# -gt 0 ]] ; do
    case "$1" in
      -s | --status)
        set-command 'status'
        ;;
      -u | --unindexed)
        set-command 'unindexed'
        ;;
      -m | --missing)
        set-command 'missing'
        ;;
      *)
        die "unrecognised input: $1"
        ;;
    esac
    shift
  done
}

set-command () {
  if [[ -z "$request_cmd" ]] ; then
    request_cmd="$1"
  else
    die "command was already set to: $request_cmd"
  fi
}

cmd-status () {
  if [[ ! -f "$INDEX_FILE" ]] ; then
    local indexable="$(indexable-files | count-lines)"

    echo 'No ckfiles index found'
    echo "indexable files: $indexable"
    return
  fi

  local file_mtime="$(file-modified "$INDEX_FILE")"
  local file_hash="$(file-hash "$INDEX_FILE")"

  local indexed="$(indexed-files | count-lines)"
  local unindexed="$(unindexed-files | count-lines)"
  local missing="$(missing-files | count-lines)"
  local stat

  echo 'ckfiles index file:'
  echo "    name:       $INDEX_FILE"
  echo "    modified:   $file_mtime"
  echo "    hash:       $file_hash"
  echo
  echo 'files:'
  for stat in indexed unindexed missing ; do
    printf "    %-10s %'10.f\n" "${stat}:" "${!stat}"
  done
  echo
}

file-hash () {
  $SUMCMD "$1" | awk '{ print $1 }'
}

file-modified () {
  local filename="$1"

  case "$(uname -s)" in
    Linux)
      stat -c '%y' "$filename" | cut -d. -f1
      ;;
    Darwin)
      local ts="$(stat -f '%m' "$filename")"
      date -r "$ts" '+%Y-%m-%d %H:%M:%S'
      ;;
  esac
}

count-lines () {
  tr '\0' '\n' | wc -l | awk '{ print $1 }'
}

cmd-unindexed () {
  unindexed-files
}

cmd-missing () {
  missing-files
}

cmd-verify () {
  if [[ -f "$INDEX_FILE" ]] ; then
    echo '==> checking index'
    if check-index ; then
      echo '==> updating index'
      update-index
    else
      echo '[!] files do not match the index'
    fi
  else
    echo '==> creating new index'
    create-index
  fi
}

create-index () {
  indexable-files | append-to-index
}

update-index () {
  unindexed-files | append-to-index
}

append-to-index () {
  tr '\n' '\0' | xargs -0 $SUMCMD --binary >> "$INDEX_FILE"
}

check-index () {
  $SUMCMD --check --warn --quiet "$INDEX_FILE"
}

indexable-files () {
  local ignore=()
  local name

  for name in "${ignored_files[@]}" ; do
    ignore+=(-name "$name" -prune -o)
  done

  find . "${ignore[@]}" -type f -print0
}

indexed-files () {
  if [[ -f "$INDEX_FILE" ]] ; then
    sed -E 's/^[^ ]+ +\*?//g' "$INDEX_FILE"
  fi
}

unindexed-files () {
  diff-file-lists '<'
}

missing-files () {
  diff-file-lists '>'
}

diff-file-lists () {
  local prefix="^$1 "

  diff <(indexable-files | tr '\0' '\n' | sort) \
       <(indexed-files | sort) |
    grep -E "$prefix" |
    cut -c 3-
}

main "$@"
